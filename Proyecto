#Integrante 1: Juan Jose Cano Gonzalez - 202459645
#Integrante 2: Gabriel Bernal Rodriguez - 202459766
#Integrante 3: Jose Manuel Castaño Rojas - 202459522

#Docente: Luis Germán Toro Pareja
#Grupo 51

import tkinter as tk
from tkinter import ttk, messagebox
import csv
import random
import string

def registrar():
    nombre = entry_nombre.get()
    apellido = entry_apellido.get()
    genero = combo_genero.get()
    documento = entry_documento.get()
    fecha_nacimiento = entry_fecha_nacimiento.get()
    celular = entry_celular.get()
    nacionalidad = entry_nacionalidad.get()
    correo = entry_correo.get()
    necesita_asistencia = check_asistencia.get()
    
    with open('usuarios.csv', mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([nombre, apellido, genero, documento, fecha_nacimiento, celular, nacionalidad, correo, necesita_asistencia])
    
    mensaje_exito = "Usuario registrado exitosamente, puedes cerrar esta ventana"
    label_mensaje.config(text=mensaje_exito)

    entry_nombre.delete(0, tk.END)
    entry_apellido.delete(0, tk.END)
    combo_genero.set('')
    entry_documento.delete(0, tk.END)
    entry_fecha_nacimiento.delete(0, tk.END)
    entry_celular.delete(0, tk.END)
    entry_nacionalidad.delete(0, tk.END)
    entry_correo.delete(0, tk.END)
    check_asistencia.set(0)

root = tk.Tk()
root.title("Registro de Usuario")

marco = ttk.Frame(root, padding="20")
marco.grid(row=0, column=0)

ttk.Label(marco, text="Nombre:").grid(row=0, column=0, sticky="W")
entry_nombre = ttk.Entry(marco, width=30)
entry_nombre.grid(row=0, column=1)

ttk.Label(marco, text="Apellido:").grid(row=1, column=0, sticky="W")
entry_apellido = ttk.Entry(marco, width=30)
entry_apellido.grid(row=1, column=1)

ttk.Label(marco, text="Género:").grid(row=2, column=0, sticky="W")
combo_genero = ttk.Combobox(marco, values=["Masculino", "Femenino", "Otro"])
combo_genero.grid(row=2, column=1)
combo_genero.set('')

ttk.Label(marco, text="Documento de Identidad:").grid(row=3, column=0, sticky="W")
entry_documento = ttk.Entry(marco, width=30)
entry_documento.grid(row=3, column=1)

ttk.Label(marco, text="Fecha de Nacimiento:").grid(row=4, column=0, sticky="W")
entry_fecha_nacimiento = ttk.Entry(marco, width=30)
entry_fecha_nacimiento.grid(row=4, column=1)

ttk.Label(marco, text="Número de Celular:").grid(row=5, column=0, sticky="W")
entry_celular = ttk.Entry(marco, width=30)
entry_celular.grid(row=5, column=1)

ttk.Label(marco, text="Nacionalidad:").grid(row=6, column=0, sticky="W")
entry_nacionalidad = ttk.Entry(marco, width=30)
entry_nacionalidad.grid(row=6, column=1)

ttk.Label(marco, text="Correo Electrónico:").grid(row=7, column=0, sticky="W")
entry_correo = ttk.Entry(marco, width=30)
entry_correo.grid(row=7, column=1)

check_asistencia = tk.IntVar()
ttk.Checkbutton(marco, text="¿Necesita asistencia en el viaje?", variable=check_asistencia).grid(row=8, columnspan=2)

btn_registrar = ttk.Button(marco, text="Registrar", command=registrar)
btn_registrar.grid(row=9, columnspan=2)

label_mensaje = ttk.Label(marco, text="")
label_mensaje.grid(row=10, columnspan=2)

root.mainloop()

class AerolineaApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Aerolínea Cano")

        self.tree_vuelos = ttk.Treeview(self.master, columns=("Vuelo", "Fecha", "H. Salida", "H. Llegada", "V. Minimo", "V. Medio", "V. Maximo", "C. Origen", "C. Destino"), show="headings")
        self.tree_vuelos.heading("Vuelo", text="Vuelo")
        self.tree_vuelos.heading("Fecha", text="Fecha")
        self.tree_vuelos.heading("H. Salida", text="H. Salida")
        self.tree_vuelos.heading("H. Llegada", text="H. Llegada")
        self.tree_vuelos.heading("V. Minimo", text="V. Minimo")
        self.tree_vuelos.heading("V. Medio", text="V. Medio")
        self.tree_vuelos.heading("V. Maximo", text="V. Maximo")
        self.tree_vuelos.heading("C. Origen", text="C. Origen")
        self.tree_vuelos.heading("C. Destino", text="C. Destino")
        self.tree_vuelos.pack(expand=True, fill="both")

        self.btn_seleccionar_vuelo = ttk.Button(self.master, text="Seleccionar Vuelo", command=self.seleccionar_vuelo)
        self.btn_seleccionar_vuelo.pack(pady=10)
